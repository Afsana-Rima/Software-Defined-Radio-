;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26-Aug-13 4:09:27 
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EF1F  	GOTO        1598
_interrupt:
;MyProject.c,254 :: 		void interrupt(){
;MyProject.c,256 :: 		if (PIR1.TMR2IF==1){
0x0008	0xA29E      	BTFSS       PIR1, 1 
0x000A	0xD007      	BRA         L_interrupt120
;MyProject.c,257 :: 		counter++;
0x000C	0x0E01      	MOVLW       1
0x000E	0x2623      	ADDWF       _counter, 1 
0x0010	0x0E00      	MOVLW       0
0x0012	0x2224      	ADDWFC      _counter+1, 1 
0x0014	0x2225      	ADDWFC      _counter+2, 1 
0x0016	0x2226      	ADDWFC      _counter+3, 1 
;MyProject.c,258 :: 		PIR1.TMR2IF=0;
0x0018	0x929E      	BCF         PIR1, 1 
;MyProject.c,259 :: 		}
L_interrupt120:
;MyProject.c,260 :: 		}
L_end_interrupt:
L__interrupt174:
0x001A	0x0011      	RETFIE      1
; end of _interrupt
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x001C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x001E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0020	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0022	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0024	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0026	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x002A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x002E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0030	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0032	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0036	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x003A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x003C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x003E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0040	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0042	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0044	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0046	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0048	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x004A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x004E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0050	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0052	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0056	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x005A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x005E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0062	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0066	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x006A	0x0012      	RETURN      0
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x006C	0x50CB      	MOVF        PR2, 0 
0x006E	0x0F01      	ADDLW       1
0x0070	0x6E00      	MOVWF       R0 
0x0072	0x6A01      	CLRF        R1 
0x0074	0x0E00      	MOVLW       0
0x0076	0x2201      	ADDWFC      R1, 1 
0x0078	0xF004C042  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E05      	MOVWF       R5 
0x0080	0xDFCD      	RCALL       _Mul_16x16_U
0x0082	0x0E06      	MOVLW       6
0x0084	0x6E02      	MOVWF       R2 
0x0086	0xF004C000  	MOVFF       R0, R4
0x008A	0xF005C001  	MOVFF       R1, R5
0x008E	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0x0090	0xE005      	BZ          L__PWM1_Set_Duty11
0x0092	0x3205      	RRCF        R5, 1 
0x0094	0x3204      	RRCF        R4, 1 
0x0096	0x9E05      	BCF         R5, 7 
0x0098	0x0FFF      	ADDLW       255
0x009A	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,48 :: 		
0x009C	0x0E04      	MOVLW       4
0x009E	0x6E01      	MOVWF       R1 
0x00A0	0xF000C004  	MOVFF       R4, R0
0x00A4	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0x00A6	0xE004      	BZ          L__PWM1_Set_Duty13
0x00A8	0x3600      	RLCF        R0, 1 
0x00AA	0x9000      	BCF         R0, 0 
0x00AC	0x0FFF      	ADDLW       255
0x00AE	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x00B0	0x0E30      	MOVLW       48
0x00B2	0x1400      	ANDWF       R0, 0 
0x00B4	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x00B6	0xF000C004  	MOVFF       R4, R0
0x00BA	0xF001C005  	MOVFF       R5, R1
0x00BE	0x3201      	RRCF        R1, 1 
0x00C0	0x3200      	RRCF        R0, 1 
0x00C2	0x9E01      	BCF         R1, 7 
0x00C4	0x3201      	RRCF        R1, 1 
0x00C6	0x3200      	RRCF        R0, 1 
0x00C8	0x9E01      	BCF         R1, 7 
0x00CA	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x00CE	0x0E0F      	MOVLW       15
0x00D0	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x00D2	0x5003      	MOVF        R3, 0 
0x00D4	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
L_end_PWM1_Set_Duty:
0x00D6	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x00D8	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x00DA	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x00DC	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
L_end_PWM1_Init:
0x00DE	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x00E0	0x9494      	BCF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,56 :: 		
0x00E2	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x00E4	0x0E0C      	MOVLW       12
0x00E6	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
L_end_PWM1_Start:
0x00E8	0x0012      	RETURN      0
; end of _PWM1_Start
_PWM1_Stop:
;__Lib_PWM_c21.c,60 :: 		
;__Lib_PWM_c21.c,61 :: 		
0x00EA	0x8494      	BSF         TRISC2_bit, 2 
;__Lib_PWM_c21.c,62 :: 		
0x00EC	0x94CA      	BCF         T2CON, 2 
;__Lib_PWM_c21.c,63 :: 		
0x00EE	0x0EF0      	MOVLW       240
0x00F0	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,64 :: 		
L_end_PWM1_Stop:
0x00F2	0x0012      	RETURN      0
; end of _PWM1_Stop
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00F4	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00F6	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00F8	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00FA	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00FC	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00FE	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0100	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0102	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0104	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0106	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0108	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x010A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x010C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x010E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0110	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0112	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0114	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0116	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0118	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x011A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x011C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x011E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0120	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0122	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0124	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0126	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x0128	0x0012      	RETURN      0
; end of _Div_16x16_U
_sentData:
;MyProject.c,25 :: 		void sentData(unsigned int number){
;MyProject.c,29 :: 		pnum=number;
0x012A	0xF034C032  	MOVFF       FARG_sentData_number, sentData_pnum_L0
0x012E	0xF035C033  	MOVFF       FARG_sentData_number+1, sentData_pnum_L0+1
;MyProject.c,30 :: 		number=(number/10);
0x0132	0x0E0A      	MOVLW       10
0x0134	0x6E04      	MOVWF       R4 
0x0136	0x0E00      	MOVLW       0
0x0138	0x6E05      	MOVWF       R5 
0x013A	0xF000C032  	MOVFF       FARG_sentData_number, R0
0x013E	0xF001C033  	MOVFF       FARG_sentData_number+1, R1
0x0142	0xDFD8      	RCALL       _Div_16x16_U
0x0144	0xF032C000  	MOVFF       R0, FARG_sentData_number
0x0148	0xF033C001  	MOVFF       R1, FARG_sentData_number+1
;MyProject.c,31 :: 		digit[1]=(pnum-(number*10));
0x014C	0x0E0A      	MOVLW       10
0x014E	0x6E04      	MOVWF       R4 
0x0150	0x0E00      	MOVLW       0
0x0152	0x6E05      	MOVWF       R5 
0x0154	0xDF63      	RCALL       _Mul_16x16_U
0x0156	0x5000      	MOVF        R0, 0 
0x0158	0x5C34      	SUBWF       sentData_pnum_L0, 0 
0x015A	0x6E3A      	MOVWF       sentData_digit_L0+2 
0x015C	0x5001      	MOVF        R1, 0 
0x015E	0x5835      	SUBWFB      sentData_pnum_L0+1, 0 
0x0160	0x6E3B      	MOVWF       sentData_digit_L0+3 
;MyProject.c,32 :: 		digit[3]=(number/10);
0x0162	0x0E0A      	MOVLW       10
0x0164	0x6E04      	MOVWF       R4 
0x0166	0x0E00      	MOVLW       0
0x0168	0x6E05      	MOVWF       R5 
0x016A	0xF000C032  	MOVFF       FARG_sentData_number, R0
0x016E	0xF001C033  	MOVFF       FARG_sentData_number+1, R1
0x0172	0xDFC0      	RCALL       _Div_16x16_U
0x0174	0xF03EC000  	MOVFF       R0, sentData_digit_L0+6
0x0178	0xF03FC001  	MOVFF       R1, sentData_digit_L0+7
;MyProject.c,33 :: 		digit[2]=(number-(digit[3]*10));
0x017C	0x0E0A      	MOVLW       10
0x017E	0x6E04      	MOVWF       R4 
0x0180	0x0E00      	MOVLW       0
0x0182	0x6E05      	MOVWF       R5 
0x0184	0xDF4B      	RCALL       _Mul_16x16_U
0x0186	0x5000      	MOVF        R0, 0 
0x0188	0x5C32      	SUBWF       FARG_sentData_number, 0 
0x018A	0x6E3C      	MOVWF       sentData_digit_L0+4 
0x018C	0x5001      	MOVF        R1, 0 
0x018E	0x5833      	SUBWFB      FARG_sentData_number+1, 0 
0x0190	0x6E3D      	MOVWF       sentData_digit_L0+5 
;MyProject.c,35 :: 		PWM1_Start();
0x0192	0xDFA6      	RCALL       _PWM1_Start
;MyProject.c,36 :: 		delay_us(2575);
0x0194	0x0E07      	MOVLW       7
0x0196	0x6E0C      	MOVWF       R12, 0
0x0198	0x0EAF      	MOVLW       175
0x019A	0x6E0D      	MOVWF       R13, 0
L_sentData0:
0x019C	0x2E0D      	DECFSZ      R13, 1, 0
0x019E	0xD7FE      	BRA         L_sentData0
0x01A0	0x2E0C      	DECFSZ      R12, 1, 0
0x01A2	0xD7FC      	BRA         L_sentData0
;MyProject.c,37 :: 		PWM1_Stop();
0x01A4	0xDFA2      	RCALL       _PWM1_Stop
;MyProject.c,38 :: 		Delay_us(100000);
0x01A6	0x0E02      	MOVLW       2
0x01A8	0x6E0B      	MOVWF       R11, 0
0x01AA	0x0E04      	MOVLW       4
0x01AC	0x6E0C      	MOVWF       R12, 0
0x01AE	0x0EBA      	MOVLW       186
0x01B0	0x6E0D      	MOVWF       R13, 0
L_sentData1:
0x01B2	0x2E0D      	DECFSZ      R13, 1, 0
0x01B4	0xD7FE      	BRA         L_sentData1
0x01B6	0x2E0C      	DECFSZ      R12, 1, 0
0x01B8	0xD7FC      	BRA         L_sentData1
0x01BA	0x2E0B      	DECFSZ      R11, 1, 0
0x01BC	0xD7FA      	BRA         L_sentData1
0x01BE	0x0000      	NOP
;MyProject.c,40 :: 		for (i=1;i<4;i++){
0x01C0	0x0E01      	MOVLW       1
0x01C2	0x6E36      	MOVWF       sentData_i_L0 
0x01C4	0x0E00      	MOVLW       0
0x01C6	0x6E37      	MOVWF       sentData_i_L0+1 
L_sentData2:
0x01C8	0x0E00      	MOVLW       0
0x01CA	0x5C37      	SUBWF       sentData_i_L0+1, 0 
0x01CC	0xE102      	BNZ         L__sentData135
0x01CE	0x0E04      	MOVLW       4
0x01D0	0x5C36      	SUBWF       sentData_i_L0, 0 
L__sentData135:
0x01D2	0xB0D8      	BTFSC       STATUS, 0 
0x01D4	0xD1D2      	BRA         L_sentData3
;MyProject.c,42 :: 		if (digit[i]==0){
0x01D6	0xF000C036  	MOVFF       sentData_i_L0, R0
0x01DA	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x01DE	0x3600      	RLCF        R0, 1 
0x01E0	0x9000      	BCF         R0, 0 
0x01E2	0x3601      	RLCF        R1, 1 
0x01E4	0x0E38      	MOVLW       sentData_digit_L0
0x01E6	0x2400      	ADDWF       R0, 0 
0x01E8	0x6EE9      	MOVWF       FSR0L 
0x01EA	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x01EC	0x2001      	ADDWFC      R1, 0 
0x01EE	0x6EEA      	MOVWF       FSR0H 
0x01F0	0xF001CFEE  	MOVFF       POSTINC0, R1
0x01F4	0xF002CFEE  	MOVFF       POSTINC0, R2
0x01F8	0x0E00      	MOVLW       0
0x01FA	0x1802      	XORWF       R2, 0 
0x01FC	0xE102      	BNZ         L__sentData136
0x01FE	0x0E00      	MOVLW       0
0x0200	0x1801      	XORWF       R1, 0 
L__sentData136:
0x0202	0xE114      	BNZ         L_sentData5
;MyProject.c,43 :: 		PWM1_Start();
0x0204	0xDF6D      	RCALL       _PWM1_Start
;MyProject.c,44 :: 		delay_us(100);
0x0206	0x0E42      	MOVLW       66
0x0208	0x6E0D      	MOVWF       R13, 0
L_sentData6:
0x020A	0x2E0D      	DECFSZ      R13, 1, 0
0x020C	0xD7FE      	BRA         L_sentData6
0x020E	0x0000      	NOP
;MyProject.c,45 :: 		PWM1_Stop();
0x0210	0xDF6C      	RCALL       _PWM1_Stop
;MyProject.c,46 :: 		Delay_us(100000);
0x0212	0x0E02      	MOVLW       2
0x0214	0x6E0B      	MOVWF       R11, 0
0x0216	0x0E04      	MOVLW       4
0x0218	0x6E0C      	MOVWF       R12, 0
0x021A	0x0EBA      	MOVLW       186
0x021C	0x6E0D      	MOVWF       R13, 0
L_sentData7:
0x021E	0x2E0D      	DECFSZ      R13, 1, 0
0x0220	0xD7FE      	BRA         L_sentData7
0x0222	0x2E0C      	DECFSZ      R12, 1, 0
0x0224	0xD7FC      	BRA         L_sentData7
0x0226	0x2E0B      	DECFSZ      R11, 1, 0
0x0228	0xD7FA      	BRA         L_sentData7
0x022A	0x0000      	NOP
;MyProject.c,47 :: 		}
L_sentData5:
;MyProject.c,48 :: 		if (digit[i]==1){
0x022C	0xF000C036  	MOVFF       sentData_i_L0, R0
0x0230	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x0234	0x3600      	RLCF        R0, 1 
0x0236	0x9000      	BCF         R0, 0 
0x0238	0x3601      	RLCF        R1, 1 
0x023A	0x0E38      	MOVLW       sentData_digit_L0
0x023C	0x2400      	ADDWF       R0, 0 
0x023E	0x6EE9      	MOVWF       FSR0L 
0x0240	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x0242	0x2001      	ADDWFC      R1, 0 
0x0244	0x6EEA      	MOVWF       FSR0H 
0x0246	0xF001CFEE  	MOVFF       POSTINC0, R1
0x024A	0xF002CFEE  	MOVFF       POSTINC0, R2
0x024E	0x0E00      	MOVLW       0
0x0250	0x1802      	XORWF       R2, 0 
0x0252	0xE102      	BNZ         L__sentData137
0x0254	0x0E01      	MOVLW       1
0x0256	0x1801      	XORWF       R1, 0 
L__sentData137:
0x0258	0xE114      	BNZ         L_sentData8
;MyProject.c,49 :: 		PWM1_Start();
0x025A	0xDF42      	RCALL       _PWM1_Start
;MyProject.c,50 :: 		delay_us(325);
0x025C	0x0ED8      	MOVLW       216
0x025E	0x6E0D      	MOVWF       R13, 0
L_sentData9:
0x0260	0x2E0D      	DECFSZ      R13, 1, 0
0x0262	0xD7FE      	BRA         L_sentData9
0x0264	0x0000      	NOP
;MyProject.c,51 :: 		PWM1_Stop();
0x0266	0xDF41      	RCALL       _PWM1_Stop
;MyProject.c,52 :: 		Delay_us(100000);
0x0268	0x0E02      	MOVLW       2
0x026A	0x6E0B      	MOVWF       R11, 0
0x026C	0x0E04      	MOVLW       4
0x026E	0x6E0C      	MOVWF       R12, 0
0x0270	0x0EBA      	MOVLW       186
0x0272	0x6E0D      	MOVWF       R13, 0
L_sentData10:
0x0274	0x2E0D      	DECFSZ      R13, 1, 0
0x0276	0xD7FE      	BRA         L_sentData10
0x0278	0x2E0C      	DECFSZ      R12, 1, 0
0x027A	0xD7FC      	BRA         L_sentData10
0x027C	0x2E0B      	DECFSZ      R11, 1, 0
0x027E	0xD7FA      	BRA         L_sentData10
0x0280	0x0000      	NOP
;MyProject.c,53 :: 		}
L_sentData8:
;MyProject.c,54 :: 		if (digit[i]==2){
0x0282	0xF000C036  	MOVFF       sentData_i_L0, R0
0x0286	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x028A	0x3600      	RLCF        R0, 1 
0x028C	0x9000      	BCF         R0, 0 
0x028E	0x3601      	RLCF        R1, 1 
0x0290	0x0E38      	MOVLW       sentData_digit_L0
0x0292	0x2400      	ADDWF       R0, 0 
0x0294	0x6EE9      	MOVWF       FSR0L 
0x0296	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x0298	0x2001      	ADDWFC      R1, 0 
0x029A	0x6EEA      	MOVWF       FSR0H 
0x029C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x02A0	0xF002CFEE  	MOVFF       POSTINC0, R2
0x02A4	0x0E00      	MOVLW       0
0x02A6	0x1802      	XORWF       R2, 0 
0x02A8	0xE102      	BNZ         L__sentData138
0x02AA	0x0E02      	MOVLW       2
0x02AC	0x1801      	XORWF       R1, 0 
L__sentData138:
0x02AE	0xE117      	BNZ         L_sentData11
;MyProject.c,55 :: 		PWM1_Start();
0x02B0	0xDF17      	RCALL       _PWM1_Start
;MyProject.c,56 :: 		delay_us(575);
0x02B2	0x0E02      	MOVLW       2
0x02B4	0x6E0C      	MOVWF       R12, 0
0x02B6	0x0E7D      	MOVLW       125
0x02B8	0x6E0D      	MOVWF       R13, 0
L_sentData12:
0x02BA	0x2E0D      	DECFSZ      R13, 1, 0
0x02BC	0xD7FE      	BRA         L_sentData12
0x02BE	0x2E0C      	DECFSZ      R12, 1, 0
0x02C0	0xD7FC      	BRA         L_sentData12
;MyProject.c,57 :: 		PWM1_Stop();
0x02C2	0xDF13      	RCALL       _PWM1_Stop
;MyProject.c,58 :: 		Delay_us(100000);
0x02C4	0x0E02      	MOVLW       2
0x02C6	0x6E0B      	MOVWF       R11, 0
0x02C8	0x0E04      	MOVLW       4
0x02CA	0x6E0C      	MOVWF       R12, 0
0x02CC	0x0EBA      	MOVLW       186
0x02CE	0x6E0D      	MOVWF       R13, 0
L_sentData13:
0x02D0	0x2E0D      	DECFSZ      R13, 1, 0
0x02D2	0xD7FE      	BRA         L_sentData13
0x02D4	0x2E0C      	DECFSZ      R12, 1, 0
0x02D6	0xD7FC      	BRA         L_sentData13
0x02D8	0x2E0B      	DECFSZ      R11, 1, 0
0x02DA	0xD7FA      	BRA         L_sentData13
0x02DC	0x0000      	NOP
;MyProject.c,59 :: 		}
L_sentData11:
;MyProject.c,60 :: 		if (digit[i]==3){
0x02DE	0xF000C036  	MOVFF       sentData_i_L0, R0
0x02E2	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x02E6	0x3600      	RLCF        R0, 1 
0x02E8	0x9000      	BCF         R0, 0 
0x02EA	0x3601      	RLCF        R1, 1 
0x02EC	0x0E38      	MOVLW       sentData_digit_L0
0x02EE	0x2400      	ADDWF       R0, 0 
0x02F0	0x6EE9      	MOVWF       FSR0L 
0x02F2	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x02F4	0x2001      	ADDWFC      R1, 0 
0x02F6	0x6EEA      	MOVWF       FSR0H 
0x02F8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x02FC	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0300	0x0E00      	MOVLW       0
0x0302	0x1802      	XORWF       R2, 0 
0x0304	0xE102      	BNZ         L__sentData139
0x0306	0x0E03      	MOVLW       3
0x0308	0x1801      	XORWF       R1, 0 
L__sentData139:
0x030A	0xE117      	BNZ         L_sentData14
;MyProject.c,61 :: 		PWM1_Start();
0x030C	0xDEE9      	RCALL       _PWM1_Start
;MyProject.c,62 :: 		delay_us(825);
0x030E	0x0E03      	MOVLW       3
0x0310	0x6E0C      	MOVWF       R12, 0
0x0312	0x0E23      	MOVLW       35
0x0314	0x6E0D      	MOVWF       R13, 0
L_sentData15:
0x0316	0x2E0D      	DECFSZ      R13, 1, 0
0x0318	0xD7FE      	BRA         L_sentData15
0x031A	0x2E0C      	DECFSZ      R12, 1, 0
0x031C	0xD7FC      	BRA         L_sentData15
;MyProject.c,63 :: 		PWM1_Stop();
0x031E	0xDEE5      	RCALL       _PWM1_Stop
;MyProject.c,64 :: 		Delay_us(100000);
0x0320	0x0E02      	MOVLW       2
0x0322	0x6E0B      	MOVWF       R11, 0
0x0324	0x0E04      	MOVLW       4
0x0326	0x6E0C      	MOVWF       R12, 0
0x0328	0x0EBA      	MOVLW       186
0x032A	0x6E0D      	MOVWF       R13, 0
L_sentData16:
0x032C	0x2E0D      	DECFSZ      R13, 1, 0
0x032E	0xD7FE      	BRA         L_sentData16
0x0330	0x2E0C      	DECFSZ      R12, 1, 0
0x0332	0xD7FC      	BRA         L_sentData16
0x0334	0x2E0B      	DECFSZ      R11, 1, 0
0x0336	0xD7FA      	BRA         L_sentData16
0x0338	0x0000      	NOP
;MyProject.c,65 :: 		}
L_sentData14:
;MyProject.c,66 :: 		if (digit[i]==4){
0x033A	0xF000C036  	MOVFF       sentData_i_L0, R0
0x033E	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x0342	0x3600      	RLCF        R0, 1 
0x0344	0x9000      	BCF         R0, 0 
0x0346	0x3601      	RLCF        R1, 1 
0x0348	0x0E38      	MOVLW       sentData_digit_L0
0x034A	0x2400      	ADDWF       R0, 0 
0x034C	0x6EE9      	MOVWF       FSR0L 
0x034E	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x0350	0x2001      	ADDWFC      R1, 0 
0x0352	0x6EEA      	MOVWF       FSR0H 
0x0354	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0358	0xF002CFEE  	MOVFF       POSTINC0, R2
0x035C	0x0E00      	MOVLW       0
0x035E	0x1802      	XORWF       R2, 0 
0x0360	0xE102      	BNZ         L__sentData140
0x0362	0x0E04      	MOVLW       4
0x0364	0x1801      	XORWF       R1, 0 
L__sentData140:
0x0366	0xE119      	BNZ         L_sentData17
;MyProject.c,67 :: 		PWM1_Start();
0x0368	0xDEBB      	RCALL       _PWM1_Start
;MyProject.c,68 :: 		delay_us(1075);
0x036A	0x0E03      	MOVLW       3
0x036C	0x6E0C      	MOVWF       R12, 0
0x036E	0x0EC9      	MOVLW       201
0x0370	0x6E0D      	MOVWF       R13, 0
L_sentData18:
0x0372	0x2E0D      	DECFSZ      R13, 1, 0
0x0374	0xD7FE      	BRA         L_sentData18
0x0376	0x2E0C      	DECFSZ      R12, 1, 0
0x0378	0xD7FC      	BRA         L_sentData18
0x037A	0x0000      	NOP
0x037C	0x0000      	NOP
;MyProject.c,69 :: 		PWM1_Stop();
0x037E	0xDEB5      	RCALL       _PWM1_Stop
;MyProject.c,70 :: 		Delay_us(100000);
0x0380	0x0E02      	MOVLW       2
0x0382	0x6E0B      	MOVWF       R11, 0
0x0384	0x0E04      	MOVLW       4
0x0386	0x6E0C      	MOVWF       R12, 0
0x0388	0x0EBA      	MOVLW       186
0x038A	0x6E0D      	MOVWF       R13, 0
L_sentData19:
0x038C	0x2E0D      	DECFSZ      R13, 1, 0
0x038E	0xD7FE      	BRA         L_sentData19
0x0390	0x2E0C      	DECFSZ      R12, 1, 0
0x0392	0xD7FC      	BRA         L_sentData19
0x0394	0x2E0B      	DECFSZ      R11, 1, 0
0x0396	0xD7FA      	BRA         L_sentData19
0x0398	0x0000      	NOP
;MyProject.c,71 :: 		}
L_sentData17:
;MyProject.c,72 :: 		if (digit[i]==5){
0x039A	0xF000C036  	MOVFF       sentData_i_L0, R0
0x039E	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x03A2	0x3600      	RLCF        R0, 1 
0x03A4	0x9000      	BCF         R0, 0 
0x03A6	0x3601      	RLCF        R1, 1 
0x03A8	0x0E38      	MOVLW       sentData_digit_L0
0x03AA	0x2400      	ADDWF       R0, 0 
0x03AC	0x6EE9      	MOVWF       FSR0L 
0x03AE	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x03B0	0x2001      	ADDWFC      R1, 0 
0x03B2	0x6EEA      	MOVWF       FSR0H 
0x03B4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x03B8	0xF002CFEE  	MOVFF       POSTINC0, R2
0x03BC	0x0E00      	MOVLW       0
0x03BE	0x1802      	XORWF       R2, 0 
0x03C0	0xE102      	BNZ         L__sentData141
0x03C2	0x0E05      	MOVLW       5
0x03C4	0x1801      	XORWF       R1, 0 
L__sentData141:
0x03C6	0xE119      	BNZ         L_sentData20
;MyProject.c,73 :: 		PWM1_Start();
0x03C8	0xDE8B      	RCALL       _PWM1_Start
;MyProject.c,74 :: 		delay_us(1325);
0x03CA	0x0E04      	MOVLW       4
0x03CC	0x6E0C      	MOVWF       R12, 0
0x03CE	0x0E6F      	MOVLW       111
0x03D0	0x6E0D      	MOVWF       R13, 0
L_sentData21:
0x03D2	0x2E0D      	DECFSZ      R13, 1, 0
0x03D4	0xD7FE      	BRA         L_sentData21
0x03D6	0x2E0C      	DECFSZ      R12, 1, 0
0x03D8	0xD7FC      	BRA         L_sentData21
0x03DA	0x0000      	NOP
0x03DC	0x0000      	NOP
;MyProject.c,75 :: 		PWM1_Stop();
0x03DE	0xDE85      	RCALL       _PWM1_Stop
;MyProject.c,76 :: 		Delay_us(100000);
0x03E0	0x0E02      	MOVLW       2
0x03E2	0x6E0B      	MOVWF       R11, 0
0x03E4	0x0E04      	MOVLW       4
0x03E6	0x6E0C      	MOVWF       R12, 0
0x03E8	0x0EBA      	MOVLW       186
0x03EA	0x6E0D      	MOVWF       R13, 0
L_sentData22:
0x03EC	0x2E0D      	DECFSZ      R13, 1, 0
0x03EE	0xD7FE      	BRA         L_sentData22
0x03F0	0x2E0C      	DECFSZ      R12, 1, 0
0x03F2	0xD7FC      	BRA         L_sentData22
0x03F4	0x2E0B      	DECFSZ      R11, 1, 0
0x03F6	0xD7FA      	BRA         L_sentData22
0x03F8	0x0000      	NOP
;MyProject.c,77 :: 		}
L_sentData20:
;MyProject.c,78 :: 		if (digit[i]==6){
0x03FA	0xF000C036  	MOVFF       sentData_i_L0, R0
0x03FE	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x0402	0x3600      	RLCF        R0, 1 
0x0404	0x9000      	BCF         R0, 0 
0x0406	0x3601      	RLCF        R1, 1 
0x0408	0x0E38      	MOVLW       sentData_digit_L0
0x040A	0x2400      	ADDWF       R0, 0 
0x040C	0x6EE9      	MOVWF       FSR0L 
0x040E	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x0410	0x2001      	ADDWFC      R1, 0 
0x0412	0x6EEA      	MOVWF       FSR0H 
0x0414	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0418	0xF002CFEE  	MOVFF       POSTINC0, R2
0x041C	0x0E00      	MOVLW       0
0x041E	0x1802      	XORWF       R2, 0 
0x0420	0xE102      	BNZ         L__sentData142
0x0422	0x0E06      	MOVLW       6
0x0424	0x1801      	XORWF       R1, 0 
L__sentData142:
0x0426	0xE119      	BNZ         L_sentData23
;MyProject.c,79 :: 		PWM1_Start();
0x0428	0xDE5B      	RCALL       _PWM1_Start
;MyProject.c,80 :: 		delay_us(1575);
0x042A	0x0E05      	MOVLW       5
0x042C	0x6E0C      	MOVWF       R12, 0
0x042E	0x0E15      	MOVLW       21
0x0430	0x6E0D      	MOVWF       R13, 0
L_sentData24:
0x0432	0x2E0D      	DECFSZ      R13, 1, 0
0x0434	0xD7FE      	BRA         L_sentData24
0x0436	0x2E0C      	DECFSZ      R12, 1, 0
0x0438	0xD7FC      	BRA         L_sentData24
0x043A	0x0000      	NOP
0x043C	0x0000      	NOP
;MyProject.c,81 :: 		PWM1_Stop();
0x043E	0xDE55      	RCALL       _PWM1_Stop
;MyProject.c,82 :: 		Delay_us(100000);
0x0440	0x0E02      	MOVLW       2
0x0442	0x6E0B      	MOVWF       R11, 0
0x0444	0x0E04      	MOVLW       4
0x0446	0x6E0C      	MOVWF       R12, 0
0x0448	0x0EBA      	MOVLW       186
0x044A	0x6E0D      	MOVWF       R13, 0
L_sentData25:
0x044C	0x2E0D      	DECFSZ      R13, 1, 0
0x044E	0xD7FE      	BRA         L_sentData25
0x0450	0x2E0C      	DECFSZ      R12, 1, 0
0x0452	0xD7FC      	BRA         L_sentData25
0x0454	0x2E0B      	DECFSZ      R11, 1, 0
0x0456	0xD7FA      	BRA         L_sentData25
0x0458	0x0000      	NOP
;MyProject.c,83 :: 		}
L_sentData23:
;MyProject.c,84 :: 		if (digit[i]==7){
0x045A	0xF000C036  	MOVFF       sentData_i_L0, R0
0x045E	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x0462	0x3600      	RLCF        R0, 1 
0x0464	0x9000      	BCF         R0, 0 
0x0466	0x3601      	RLCF        R1, 1 
0x0468	0x0E38      	MOVLW       sentData_digit_L0
0x046A	0x2400      	ADDWF       R0, 0 
0x046C	0x6EE9      	MOVWF       FSR0L 
0x046E	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x0470	0x2001      	ADDWFC      R1, 0 
0x0472	0x6EEA      	MOVWF       FSR0H 
0x0474	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0478	0xF002CFEE  	MOVFF       POSTINC0, R2
0x047C	0x0E00      	MOVLW       0
0x047E	0x1802      	XORWF       R2, 0 
0x0480	0xE102      	BNZ         L__sentData143
0x0482	0x0E07      	MOVLW       7
0x0484	0x1801      	XORWF       R1, 0 
L__sentData143:
0x0486	0xE118      	BNZ         L_sentData26
;MyProject.c,85 :: 		PWM1_Start();
0x0488	0xDE2B      	RCALL       _PWM1_Start
;MyProject.c,86 :: 		delay_us(1825);
0x048A	0x0E05      	MOVLW       5
0x048C	0x6E0C      	MOVWF       R12, 0
0x048E	0x0EBC      	MOVLW       188
0x0490	0x6E0D      	MOVWF       R13, 0
L_sentData27:
0x0492	0x2E0D      	DECFSZ      R13, 1, 0
0x0494	0xD7FE      	BRA         L_sentData27
0x0496	0x2E0C      	DECFSZ      R12, 1, 0
0x0498	0xD7FC      	BRA         L_sentData27
0x049A	0x0000      	NOP
;MyProject.c,87 :: 		PWM1_Stop();
0x049C	0xDE26      	RCALL       _PWM1_Stop
;MyProject.c,88 :: 		Delay_us(100000);
0x049E	0x0E02      	MOVLW       2
0x04A0	0x6E0B      	MOVWF       R11, 0
0x04A2	0x0E04      	MOVLW       4
0x04A4	0x6E0C      	MOVWF       R12, 0
0x04A6	0x0EBA      	MOVLW       186
0x04A8	0x6E0D      	MOVWF       R13, 0
L_sentData28:
0x04AA	0x2E0D      	DECFSZ      R13, 1, 0
0x04AC	0xD7FE      	BRA         L_sentData28
0x04AE	0x2E0C      	DECFSZ      R12, 1, 0
0x04B0	0xD7FC      	BRA         L_sentData28
0x04B2	0x2E0B      	DECFSZ      R11, 1, 0
0x04B4	0xD7FA      	BRA         L_sentData28
0x04B6	0x0000      	NOP
;MyProject.c,89 :: 		}
L_sentData26:
;MyProject.c,90 :: 		if (digit[i]==8){
0x04B8	0xF000C036  	MOVFF       sentData_i_L0, R0
0x04BC	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x04C0	0x3600      	RLCF        R0, 1 
0x04C2	0x9000      	BCF         R0, 0 
0x04C4	0x3601      	RLCF        R1, 1 
0x04C6	0x0E38      	MOVLW       sentData_digit_L0
0x04C8	0x2400      	ADDWF       R0, 0 
0x04CA	0x6EE9      	MOVWF       FSR0L 
0x04CC	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x04CE	0x2001      	ADDWFC      R1, 0 
0x04D0	0x6EEA      	MOVWF       FSR0H 
0x04D2	0xF001CFEE  	MOVFF       POSTINC0, R1
0x04D6	0xF002CFEE  	MOVFF       POSTINC0, R2
0x04DA	0x0E00      	MOVLW       0
0x04DC	0x1802      	XORWF       R2, 0 
0x04DE	0xE102      	BNZ         L__sentData144
0x04E0	0x0E08      	MOVLW       8
0x04E2	0x1801      	XORWF       R1, 0 
L__sentData144:
0x04E4	0xE118      	BNZ         L_sentData29
;MyProject.c,91 :: 		PWM1_Start();
0x04E6	0xDDFC      	RCALL       _PWM1_Start
;MyProject.c,92 :: 		delay_us(2075);
0x04E8	0x0E06      	MOVLW       6
0x04EA	0x6E0C      	MOVWF       R12, 0
0x04EC	0x0E62      	MOVLW       98
0x04EE	0x6E0D      	MOVWF       R13, 0
L_sentData30:
0x04F0	0x2E0D      	DECFSZ      R13, 1, 0
0x04F2	0xD7FE      	BRA         L_sentData30
0x04F4	0x2E0C      	DECFSZ      R12, 1, 0
0x04F6	0xD7FC      	BRA         L_sentData30
0x04F8	0x0000      	NOP
;MyProject.c,93 :: 		PWM1_Stop();
0x04FA	0xDDF7      	RCALL       _PWM1_Stop
;MyProject.c,94 :: 		Delay_us(100000);
0x04FC	0x0E02      	MOVLW       2
0x04FE	0x6E0B      	MOVWF       R11, 0
0x0500	0x0E04      	MOVLW       4
0x0502	0x6E0C      	MOVWF       R12, 0
0x0504	0x0EBA      	MOVLW       186
0x0506	0x6E0D      	MOVWF       R13, 0
L_sentData31:
0x0508	0x2E0D      	DECFSZ      R13, 1, 0
0x050A	0xD7FE      	BRA         L_sentData31
0x050C	0x2E0C      	DECFSZ      R12, 1, 0
0x050E	0xD7FC      	BRA         L_sentData31
0x0510	0x2E0B      	DECFSZ      R11, 1, 0
0x0512	0xD7FA      	BRA         L_sentData31
0x0514	0x0000      	NOP
;MyProject.c,95 :: 		}
L_sentData29:
;MyProject.c,96 :: 		if (digit[i]==9){
0x0516	0xF000C036  	MOVFF       sentData_i_L0, R0
0x051A	0xF001C037  	MOVFF       sentData_i_L0+1, R1
0x051E	0x3600      	RLCF        R0, 1 
0x0520	0x9000      	BCF         R0, 0 
0x0522	0x3601      	RLCF        R1, 1 
0x0524	0x0E38      	MOVLW       sentData_digit_L0
0x0526	0x2400      	ADDWF       R0, 0 
0x0528	0x6EE9      	MOVWF       FSR0L 
0x052A	0x0E00      	MOVLW       hi_addr(sentData_digit_L0)
0x052C	0x2001      	ADDWFC      R1, 0 
0x052E	0x6EEA      	MOVWF       FSR0H 
0x0530	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0534	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0538	0x0E00      	MOVLW       0
0x053A	0x1802      	XORWF       R2, 0 
0x053C	0xE102      	BNZ         L__sentData145
0x053E	0x0E09      	MOVLW       9
0x0540	0x1801      	XORWF       R1, 0 
L__sentData145:
0x0542	0xE118      	BNZ         L_sentData32
;MyProject.c,97 :: 		PWM1_Start();
0x0544	0xDDCD      	RCALL       _PWM1_Start
;MyProject.c,98 :: 		delay_us(2325);
0x0546	0x0E07      	MOVLW       7
0x0548	0x6E0C      	MOVWF       R12, 0
0x054A	0x0E08      	MOVLW       8
0x054C	0x6E0D      	MOVWF       R13, 0
L_sentData33:
0x054E	0x2E0D      	DECFSZ      R13, 1, 0
0x0550	0xD7FE      	BRA         L_sentData33
0x0552	0x2E0C      	DECFSZ      R12, 1, 0
0x0554	0xD7FC      	BRA         L_sentData33
0x0556	0x0000      	NOP
;MyProject.c,99 :: 		PWM1_Stop();
0x0558	0xDDC8      	RCALL       _PWM1_Stop
;MyProject.c,100 :: 		Delay_us(100000);
0x055A	0x0E02      	MOVLW       2
0x055C	0x6E0B      	MOVWF       R11, 0
0x055E	0x0E04      	MOVLW       4
0x0560	0x6E0C      	MOVWF       R12, 0
0x0562	0x0EBA      	MOVLW       186
0x0564	0x6E0D      	MOVWF       R13, 0
L_sentData34:
0x0566	0x2E0D      	DECFSZ      R13, 1, 0
0x0568	0xD7FE      	BRA         L_sentData34
0x056A	0x2E0C      	DECFSZ      R12, 1, 0
0x056C	0xD7FC      	BRA         L_sentData34
0x056E	0x2E0B      	DECFSZ      R11, 1, 0
0x0570	0xD7FA      	BRA         L_sentData34
0x0572	0x0000      	NOP
;MyProject.c,101 :: 		}
L_sentData32:
;MyProject.c,40 :: 		for (i=1;i<4;i++){
0x0574	0x4A36      	INFSNZ      sentData_i_L0, 1 
0x0576	0x2A37      	INCF        sentData_i_L0+1, 1 
;MyProject.c,102 :: 		}
0x0578	0xD627      	BRA         L_sentData2
L_sentData3:
;MyProject.c,103 :: 		}
L_end_sentData:
0x057A	0x0012      	RETURN      0
; end of _sentData
_setupForS:
;MyProject.c,6 :: 		void setupForS(){
;MyProject.c,7 :: 		TRISC=0x00;
0x057C	0x6A94      	CLRF        TRISC 
;MyProject.c,8 :: 		CCP1CON=0b00001100;
0x057E	0x0E0C      	MOVLW       12
0x0580	0x6EBD      	MOVWF       CCP1CON 
;MyProject.c,9 :: 		PWM1_Init(38000);
0x0582	0x90CA      	BCF         T2CON, 0, 0
0x0584	0x92CA      	BCF         T2CON, 1, 0
0x0586	0x0E33      	MOVLW       51
0x0588	0x6ECB      	MOVWF       PR2, 0
0x058A	0xDDA6      	RCALL       _PWM1_Init
;MyProject.c,10 :: 		PWM1_Set_Duty(50);
0x058C	0x0E32      	MOVLW       50
0x058E	0x6E42      	MOVWF       FARG_PWM1_Set_Duty_new_duty 
0x0590	0xDD6D      	RCALL       _PWM1_Set_Duty
;MyProject.c,11 :: 		}
L_end_setupForS:
0x0592	0x0012      	RETURN      0
; end of _setupForS
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x0594	0x0E00      	MOVLW       0
0x0596	0xBA9E      	BTFSC       PIR1, 5 
0x0598	0x0E01      	MOVLW       1
0x059A	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x059C	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x059E	0x0E1E      	MOVLW       _UART1_Write
0x05A0	0x6E17      	MOVWF       _UART_Wr_Ptr 
0x05A2	0x0E06      	MOVLW       hi_addr(_UART1_Write)
0x05A4	0x6E18      	MOVWF       _UART_Wr_Ptr+1 
0x05A6	0x0E32      	MOVLW       FARG_UART1_Write_data_
0x05A8	0x6E19      	MOVWF       _UART_Wr_Ptr+2 
0x05AA	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x05AC	0x6E1A      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x05AE	0x0E2C      	MOVLW       _UART1_Read
0x05B0	0x6E1B      	MOVWF       _UART_Rd_Ptr 
0x05B2	0x0E06      	MOVLW       hi_addr(_UART1_Read)
0x05B4	0x6E1C      	MOVWF       _UART_Rd_Ptr+1 
0x05B6	0x0E00      	MOVLW       0
0x05B8	0x6E1D      	MOVWF       _UART_Rd_Ptr+2 
0x05BA	0x0E00      	MOVLW       0
0x05BC	0x6E1E      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x05BE	0x0E94      	MOVLW       _UART1_Data_Ready
0x05C0	0x6E2A      	MOVWF       _UART_Rdy_Ptr 
0x05C2	0x0E05      	MOVLW       hi_addr(_UART1_Data_Ready)
0x05C4	0x6E2B      	MOVWF       _UART_Rdy_Ptr+1 
0x05C6	0x0E00      	MOVLW       0
0x05C8	0x6E2C      	MOVWF       _UART_Rdy_Ptr+2 
0x05CA	0x0E00      	MOVLW       0
0x05CC	0x6E2D      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x05CE	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x05D0	0x6E2E      	MOVWF       _UART_Tx_Idle_Ptr 
0x05D2	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x05D4	0x6E2F      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x05D6	0x0E00      	MOVLW       0
0x05D8	0x6E30      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x05DA	0x0E00      	MOVLW       0
0x05DC	0x6E31      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x05DE	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x05E0	0x0E90      	MOVLW       144
0x05E2	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x05E4	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x05E6	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x05E8	0xAA9E      	BTFSS       PIR1, 5 
0x05EA	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x05EC	0xF000CFAE  	MOVFF       RCREG, R0
0x05F0	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x05F2	0x0012      	RETURN      0
; end of _UART1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x05F4	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x05F6	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x05FA	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x05FC	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x05FE	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0600	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0602	0x0012      	RETURN      0
; end of ___CC2DW
_setupForR:
;MyProject.c,13 :: 		void setupForR(){
;MyProject.c,14 :: 		ADCON1=0b00001111;
0x0604	0x0E0F      	MOVLW       15
0x0606	0x6EC1      	MOVWF       ADCON1 
;MyProject.c,15 :: 		INTCON.GIE=1;
0x0608	0x8EF2      	BSF         INTCON, 7 
;MyProject.c,16 :: 		INTCON.PEIE=1;
0x060A	0x8CF2      	BSF         INTCON, 6 
;MyProject.c,17 :: 		INTCON2.RBPU=1;
0x060C	0x8EF1      	BSF         INTCON2, 7 
;MyProject.c,18 :: 		PIE1.TMR2IE=1;
0x060E	0x829D      	BSF         PIE1, 1 
;MyProject.c,19 :: 		PIR1.TMR2IF=0;
0x0610	0x929E      	BCF         PIR1, 1 
;MyProject.c,20 :: 		PR2=255;
0x0612	0x0EFF      	MOVLW       255
0x0614	0x6ECB      	MOVWF       PR2 
;MyProject.c,21 :: 		T2CON.TMR2ON=0;
0x0616	0x94CA      	BCF         T2CON, 2 
;MyProject.c,22 :: 		TRISA=0xFF;
0x0618	0x0EFF      	MOVLW       255
0x061A	0x6E92      	MOVWF       TRISA 
;MyProject.c,23 :: 		}
L_end_setupForR:
0x061C	0x0012      	RETURN      0
; end of _setupForR
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x061E	0xB2AC      	BTFSC       TXSTA, 1 
0x0620	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0622	0x0000      	NOP
0x0624	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0626	0xFFADC032  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x062A	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x062C	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0630	0xA2AB      	BTFSS       RCSTA, 1 
0x0632	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x0634	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0636	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0638	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x063C	0x0012      	RETURN      0
; end of _UART1_Read
_main:
0x063E	0x6A15      	CLRF        _k 
0x0640	0x6A16      	CLRF        22 
;MyProject.c,106 :: 		void main() {
;MyProject.c,107 :: 		UART1_Init(19200);
0x0642	0x86B8      	BSF         BAUDCON, 3, 0
0x0644	0x6AB0      	CLRF        SPBRGH 
0x0646	0x0E67      	MOVLW       103
0x0648	0x6EAF      	MOVWF       SPBRG 
0x064A	0x84AC      	BSF         TXSTA, 2, 0
0x064C	0xDFA8      	RCALL       _UART1_Init
;MyProject.c,108 :: 		Delay_ms(1000);
0x064E	0x0E0B      	MOVLW       11
0x0650	0x6E0B      	MOVWF       R11, 0
0x0652	0x0E26      	MOVLW       38
0x0654	0x6E0C      	MOVWF       R12, 0
0x0656	0x0E5D      	MOVLW       93
0x0658	0x6E0D      	MOVWF       R13, 0
L_main35:
0x065A	0x2E0D      	DECFSZ      R13, 1, 0
0x065C	0xD7FE      	BRA         L_main35
0x065E	0x2E0C      	DECFSZ      R12, 1, 0
0x0660	0xD7FC      	BRA         L_main35
0x0662	0x2E0B      	DECFSZ      R11, 1, 0
0x0664	0xD7FA      	BRA         L_main35
0x0666	0x0000      	NOP
0x0668	0x0000      	NOP
;MyProject.c,110 :: 		while (1) {
L_main36:
;MyProject.c,112 :: 		if (UART1_Data_Ready()) {
0x066A	0xDF94      	RCALL       _UART1_Data_Ready
0x066C	0x5200      	MOVF        R0, 1 
0x066E	0xE003      	BZ          L_main38
;MyProject.c,113 :: 		uart_rd=UART1_Read();}
0x0670	0xDFDD      	RCALL       _UART1_Read
0x0672	0xF027C000  	MOVFF       R0, _uart_rd
L_main38:
;MyProject.c,115 :: 		if (uart_rd=='M'){
0x0676	0x5027      	MOVF        _uart_rd, 0 
0x0678	0x0A4D      	XORLW       77
0x067A	0xE108      	BNZ         L_main39
;MyProject.c,116 :: 		UART1_Write('N');
0x067C	0x0E4E      	MOVLW       78
0x067E	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x0680	0xDFCE      	RCALL       _UART1_Write
;MyProject.c,117 :: 		UART1_Write(10);
0x0682	0x0E0A      	MOVLW       10
0x0684	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x0686	0xDFCB      	RCALL       _UART1_Write
;MyProject.c,118 :: 		uart_rd=0;
0x0688	0x6A27      	CLRF        _uart_rd 
;MyProject.c,119 :: 		}
0x068A	0xD212      	BRA         L_main40
L_main39:
;MyProject.c,125 :: 		else if(uart_rd=='R'){                       ////**** RECEIVING MODE ****////
0x068C	0x5027      	MOVF        _uart_rd, 0 
0x068E	0x0A52      	XORLW       82
0x0690	0xA4D8      	BTFSS       STATUS, 2 
0x0692	0xD1E6      	BRA         L_main41
;MyProject.c,126 :: 		uart_rd=0;
0x0694	0x6A27      	CLRF        _uart_rd 
;MyProject.c,127 :: 		setupForR();
0x0696	0xDFB6      	RCALL       _setupForR
;MyProject.c,128 :: 		while(1){
L_main42:
;MyProject.c,129 :: 		if(UART1_Data_Ready()){
0x0698	0xDF7D      	RCALL       _UART1_Data_Ready
0x069A	0x5200      	MOVF        R0, 1 
0x069C	0xE003      	BZ          L_main44
;MyProject.c,130 :: 		uart_rd=UART1_Read();}
0x069E	0xDFC6      	RCALL       _UART1_Read
0x06A0	0xF027C000  	MOVFF       R0, _uart_rd
L_main44:
;MyProject.c,132 :: 		if (uart_rd=='M'){
0x06A4	0x5027      	MOVF        _uart_rd, 0 
0x06A6	0x0A4D      	XORLW       77
0x06A8	0xE108      	BNZ         L_main45
;MyProject.c,133 :: 		UART1_Write('R');
0x06AA	0x0E52      	MOVLW       82
0x06AC	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x06AE	0xDFB7      	RCALL       _UART1_Write
;MyProject.c,134 :: 		UART1_Write(10);
0x06B0	0x0E0A      	MOVLW       10
0x06B2	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x06B4	0xDFB4      	RCALL       _UART1_Write
;MyProject.c,135 :: 		uart_rd=0;
0x06B6	0x6A27      	CLRF        _uart_rd 
;MyProject.c,136 :: 		}
0x06B8	0xD1D2      	BRA         L_main46
L_main45:
;MyProject.c,137 :: 		else if (uart_rd=='R'){
0x06BA	0x5027      	MOVF        _uart_rd, 0 
0x06BC	0x0A52      	XORLW       82
0x06BE	0xA4D8      	BTFSS       STATUS, 2 
0x06C0	0xD1CE      	BRA         L_main47
;MyProject.c,138 :: 		uart_rd=0;
0x06C2	0x6A27      	CLRF        _uart_rd 
;MyProject.c,139 :: 		while (1) {
L_main48:
;MyProject.c,140 :: 		while(PORTA.RA1);
L_main50:
0x06C4	0xA280      	BTFSS       PORTA, 1 
0x06C6	0xD001      	BRA         L_main51
0x06C8	0xD7FD      	BRA         L_main50
L_main51:
;MyProject.c,141 :: 		if (PORTA.RA0==1){
0x06CA	0xA080      	BTFSS       PORTA, 0 
0x06CC	0xD017      	BRA         L_main52
;MyProject.c,142 :: 		T2CON.TMR2ON=1;
0x06CE	0x84CA      	BSF         T2CON, 2 
;MyProject.c,143 :: 		counter=0;
0x06D0	0x6A23      	CLRF        _counter 
0x06D2	0x6A24      	CLRF        _counter+1 
0x06D4	0x6A25      	CLRF        _counter+2 
0x06D6	0x6A26      	CLRF        _counter+3 
;MyProject.c,144 :: 		TMR2=0;
0x06D8	0x6ACC      	CLRF        TMR2 
;MyProject.c,145 :: 		while(!RA1_bit);
L_main53:
0x06DA	0xB280      	BTFSC       RA1_bit, 1 
0x06DC	0xD001      	BRA         L_main54
0x06DE	0xD7FD      	BRA         L_main53
L_main54:
;MyProject.c,146 :: 		T2CON.TMR2ON=0;
0x06E0	0x94CA      	BCF         T2CON, 2 
;MyProject.c,147 :: 		counter = counter*256+TMR2;
0x06E2	0xF026C025  	MOVFF       _counter+2, _counter+3
0x06E6	0xF025C024  	MOVFF       _counter+1, _counter+2
0x06EA	0xF024C023  	MOVFF       _counter, _counter+1
0x06EE	0x6A23      	CLRF        _counter 
0x06F0	0x50CC      	MOVF        TMR2, 0 
0x06F2	0x2623      	ADDWF       _counter, 1 
0x06F4	0x0E00      	MOVLW       0
0x06F6	0x2224      	ADDWFC      _counter+1, 1 
0x06F8	0x2225      	ADDWFC      _counter+2, 1 
0x06FA	0x2226      	ADDWFC      _counter+3, 1 
;MyProject.c,148 :: 		}
L_main52:
;MyProject.c,149 :: 		if (5050<counter && counter <=5550){
0x06FC	0x5026      	MOVF        _counter+3, 0 
0x06FE	0x0800      	SUBLW       0
0x0700	0xE108      	BNZ         L__main147
0x0702	0x5025      	MOVF        _counter+2, 0 
0x0704	0x0800      	SUBLW       0
0x0706	0xE105      	BNZ         L__main147
0x0708	0x5024      	MOVF        _counter+1, 0 
0x070A	0x0813      	SUBLW       19
0x070C	0xE102      	BNZ         L__main147
0x070E	0x5023      	MOVF        _counter, 0 
0x0710	0x08BA      	SUBLW       186
L__main147:
0x0712	0xE210      	BC          L_main57
0x0714	0x5026      	MOVF        _counter+3, 0 
0x0716	0x0800      	SUBLW       0
0x0718	0xE108      	BNZ         L__main148
0x071A	0x5025      	MOVF        _counter+2, 0 
0x071C	0x0800      	SUBLW       0
0x071E	0xE105      	BNZ         L__main148
0x0720	0x5024      	MOVF        _counter+1, 0 
0x0722	0x0815      	SUBLW       21
0x0724	0xE102      	BNZ         L__main148
0x0726	0x5023      	MOVF        _counter, 0 
0x0728	0x08AE      	SUBLW       174
L__main148:
0x072A	0xE304      	BNC         L_main57
L__main131:
;MyProject.c,150 :: 		renum=1;
0x072C	0x0E01      	MOVLW       1
0x072E	0x6E28      	MOVWF       _renum 
0x0730	0x0E00      	MOVLW       0
0x0732	0x6E29      	MOVWF       _renum+1 
;MyProject.c,151 :: 		}
L_main57:
;MyProject.c,152 :: 		while (renum==1) {
L_main58:
0x0734	0x0E00      	MOVLW       0
0x0736	0x1829      	XORWF       _renum+1, 0 
0x0738	0xE102      	BNZ         L__main149
0x073A	0x0E01      	MOVLW       1
0x073C	0x1828      	XORWF       _renum, 0 
L__main149:
0x073E	0xA4D8      	BTFSS       STATUS, 2 
0x0740	0xD18D      	BRA         L_main59
;MyProject.c,153 :: 		while(PORTA.RA1);
L_main60:
0x0742	0xA280      	BTFSS       PORTA, 1 
0x0744	0xD001      	BRA         L_main61
0x0746	0xD7FD      	BRA         L_main60
L_main61:
;MyProject.c,154 :: 		if(PORTA.RA1==0){
0x0748	0xB280      	BTFSC       PORTA, 1 
0x074A	0xD187      	BRA         L_main62
;MyProject.c,155 :: 		T2CON.TMR2ON=1;
0x074C	0x84CA      	BSF         T2CON, 2 
;MyProject.c,156 :: 		counter=0;
0x074E	0x6A23      	CLRF        _counter 
0x0750	0x6A24      	CLRF        _counter+1 
0x0752	0x6A25      	CLRF        _counter+2 
0x0754	0x6A26      	CLRF        _counter+3 
;MyProject.c,157 :: 		TMR2=0;
0x0756	0x6ACC      	CLRF        TMR2 
;MyProject.c,158 :: 		while(!RA1_bit);
L_main63:
0x0758	0xB280      	BTFSC       RA1_bit, 1 
0x075A	0xD001      	BRA         L_main64
0x075C	0xD7FD      	BRA         L_main63
L_main64:
;MyProject.c,159 :: 		T2CON.TMR2ON=0;
0x075E	0x94CA      	BCF         T2CON, 2 
;MyProject.c,160 :: 		counter = counter*256+TMR2;
0x0760	0xF003C025  	MOVFF       _counter+2, R3
0x0764	0xF002C024  	MOVFF       _counter+1, R2
0x0768	0xF001C023  	MOVFF       _counter, R1
0x076C	0x6A00      	CLRF        R0 
0x076E	0x50CC      	MOVF        TMR2, 0 
0x0770	0x2400      	ADDWF       R0, 0 
0x0772	0x6E04      	MOVWF       R4 
0x0774	0x0E00      	MOVLW       0
0x0776	0x2001      	ADDWFC      R1, 0 
0x0778	0x6E05      	MOVWF       R5 
0x077A	0x0E00      	MOVLW       0
0x077C	0x2002      	ADDWFC      R2, 0 
0x077E	0x6E06      	MOVWF       R6 
0x0780	0x0E00      	MOVLW       0
0x0782	0x2003      	ADDWFC      R3, 0 
0x0784	0x6E07      	MOVWF       R7 
0x0786	0xF023C004  	MOVFF       R4, _counter
0x078A	0xF024C005  	MOVFF       R5, _counter+1
0x078E	0xF025C006  	MOVFF       R6, _counter+2
0x0792	0xF026C007  	MOVFF       R7, _counter+3
;MyProject.c,161 :: 		if(100<=counter && counter<=550){
0x0796	0x0E00      	MOVLW       0
0x0798	0x5C07      	SUBWF       R7, 0 
0x079A	0xE108      	BNZ         L__main150
0x079C	0x0E00      	MOVLW       0
0x079E	0x5C06      	SUBWF       R6, 0 
0x07A0	0xE105      	BNZ         L__main150
0x07A2	0x0E00      	MOVLW       0
0x07A4	0x5C05      	SUBWF       R5, 0 
0x07A6	0xE102      	BNZ         L__main150
0x07A8	0x0E64      	MOVLW       100
0x07AA	0x5C04      	SUBWF       R4, 0 
L__main150:
0x07AC	0xE30F      	BNC         L_main67
0x07AE	0x5026      	MOVF        _counter+3, 0 
0x07B0	0x0800      	SUBLW       0
0x07B2	0xE108      	BNZ         L__main151
0x07B4	0x5025      	MOVF        _counter+2, 0 
0x07B6	0x0800      	SUBLW       0
0x07B8	0xE105      	BNZ         L__main151
0x07BA	0x5024      	MOVF        _counter+1, 0 
0x07BC	0x0802      	SUBLW       2
0x07BE	0xE102      	BNZ         L__main151
0x07C0	0x5023      	MOVF        _counter, 0 
0x07C2	0x0826      	SUBLW       38
L__main151:
0x07C4	0xE303      	BNC         L_main67
L__main130:
;MyProject.c,162 :: 		rnum=0;
0x07C6	0x6A1F      	CLRF        _rnum 
0x07C8	0x6A20      	CLRF        _rnum+1 
;MyProject.c,163 :: 		}
0x07CA	0xD104      	BRA         L_main68
L_main67:
;MyProject.c,164 :: 		else if (550<counter && counter <=1050){
0x07CC	0x5026      	MOVF        _counter+3, 0 
0x07CE	0x0800      	SUBLW       0
0x07D0	0xE108      	BNZ         L__main152
0x07D2	0x5025      	MOVF        _counter+2, 0 
0x07D4	0x0800      	SUBLW       0
0x07D6	0xE105      	BNZ         L__main152
0x07D8	0x5024      	MOVF        _counter+1, 0 
0x07DA	0x0802      	SUBLW       2
0x07DC	0xE102      	BNZ         L__main152
0x07DE	0x5023      	MOVF        _counter, 0 
0x07E0	0x0826      	SUBLW       38
L__main152:
0x07E2	0xE211      	BC          L_main71
0x07E4	0x5026      	MOVF        _counter+3, 0 
0x07E6	0x0800      	SUBLW       0
0x07E8	0xE108      	BNZ         L__main153
0x07EA	0x5025      	MOVF        _counter+2, 0 
0x07EC	0x0800      	SUBLW       0
0x07EE	0xE105      	BNZ         L__main153
0x07F0	0x5024      	MOVF        _counter+1, 0 
0x07F2	0x0804      	SUBLW       4
0x07F4	0xE102      	BNZ         L__main153
0x07F6	0x5023      	MOVF        _counter, 0 
0x07F8	0x081A      	SUBLW       26
L__main153:
0x07FA	0xE305      	BNC         L_main71
L__main129:
;MyProject.c,165 :: 		rnum=1;
0x07FC	0x0E01      	MOVLW       1
0x07FE	0x6E1F      	MOVWF       _rnum 
0x0800	0x0E00      	MOVLW       0
0x0802	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,166 :: 		}
0x0804	0xD0E7      	BRA         L_main72
L_main71:
;MyProject.c,167 :: 		else if (1050<counter && counter <=1550){
0x0806	0x5026      	MOVF        _counter+3, 0 
0x0808	0x0800      	SUBLW       0
0x080A	0xE108      	BNZ         L__main154
0x080C	0x5025      	MOVF        _counter+2, 0 
0x080E	0x0800      	SUBLW       0
0x0810	0xE105      	BNZ         L__main154
0x0812	0x5024      	MOVF        _counter+1, 0 
0x0814	0x0804      	SUBLW       4
0x0816	0xE102      	BNZ         L__main154
0x0818	0x5023      	MOVF        _counter, 0 
0x081A	0x081A      	SUBLW       26
L__main154:
0x081C	0xE211      	BC          L_main75
0x081E	0x5026      	MOVF        _counter+3, 0 
0x0820	0x0800      	SUBLW       0
0x0822	0xE108      	BNZ         L__main155
0x0824	0x5025      	MOVF        _counter+2, 0 
0x0826	0x0800      	SUBLW       0
0x0828	0xE105      	BNZ         L__main155
0x082A	0x5024      	MOVF        _counter+1, 0 
0x082C	0x0806      	SUBLW       6
0x082E	0xE102      	BNZ         L__main155
0x0830	0x5023      	MOVF        _counter, 0 
0x0832	0x080E      	SUBLW       14
L__main155:
0x0834	0xE305      	BNC         L_main75
L__main128:
;MyProject.c,168 :: 		rnum=2;
0x0836	0x0E02      	MOVLW       2
0x0838	0x6E1F      	MOVWF       _rnum 
0x083A	0x0E00      	MOVLW       0
0x083C	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,169 :: 		}
0x083E	0xD0CA      	BRA         L_main76
L_main75:
;MyProject.c,170 :: 		else if (1550<counter && counter <=2050)
0x0840	0x5026      	MOVF        _counter+3, 0 
0x0842	0x0800      	SUBLW       0
0x0844	0xE108      	BNZ         L__main156
0x0846	0x5025      	MOVF        _counter+2, 0 
0x0848	0x0800      	SUBLW       0
0x084A	0xE105      	BNZ         L__main156
0x084C	0x5024      	MOVF        _counter+1, 0 
0x084E	0x0806      	SUBLW       6
0x0850	0xE102      	BNZ         L__main156
0x0852	0x5023      	MOVF        _counter, 0 
0x0854	0x080E      	SUBLW       14
L__main156:
0x0856	0xE211      	BC          L_main79
0x0858	0x5026      	MOVF        _counter+3, 0 
0x085A	0x0800      	SUBLW       0
0x085C	0xE108      	BNZ         L__main157
0x085E	0x5025      	MOVF        _counter+2, 0 
0x0860	0x0800      	SUBLW       0
0x0862	0xE105      	BNZ         L__main157
0x0864	0x5024      	MOVF        _counter+1, 0 
0x0866	0x0808      	SUBLW       8
0x0868	0xE102      	BNZ         L__main157
0x086A	0x5023      	MOVF        _counter, 0 
0x086C	0x0802      	SUBLW       2
L__main157:
0x086E	0xE305      	BNC         L_main79
L__main127:
;MyProject.c,172 :: 		rnum=3;
0x0870	0x0E03      	MOVLW       3
0x0872	0x6E1F      	MOVWF       _rnum 
0x0874	0x0E00      	MOVLW       0
0x0876	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,173 :: 		}
0x0878	0xD0AD      	BRA         L_main80
L_main79:
;MyProject.c,174 :: 		else if (2050<counter && counter <=2550)
0x087A	0x5026      	MOVF        _counter+3, 0 
0x087C	0x0800      	SUBLW       0
0x087E	0xE108      	BNZ         L__main158
0x0880	0x5025      	MOVF        _counter+2, 0 
0x0882	0x0800      	SUBLW       0
0x0884	0xE105      	BNZ         L__main158
0x0886	0x5024      	MOVF        _counter+1, 0 
0x0888	0x0808      	SUBLW       8
0x088A	0xE102      	BNZ         L__main158
0x088C	0x5023      	MOVF        _counter, 0 
0x088E	0x0802      	SUBLW       2
L__main158:
0x0890	0xE211      	BC          L_main83
0x0892	0x5026      	MOVF        _counter+3, 0 
0x0894	0x0800      	SUBLW       0
0x0896	0xE108      	BNZ         L__main159
0x0898	0x5025      	MOVF        _counter+2, 0 
0x089A	0x0800      	SUBLW       0
0x089C	0xE105      	BNZ         L__main159
0x089E	0x5024      	MOVF        _counter+1, 0 
0x08A0	0x0809      	SUBLW       9
0x08A2	0xE102      	BNZ         L__main159
0x08A4	0x5023      	MOVF        _counter, 0 
0x08A6	0x08F6      	SUBLW       246
L__main159:
0x08A8	0xE305      	BNC         L_main83
L__main126:
;MyProject.c,176 :: 		rnum=4;
0x08AA	0x0E04      	MOVLW       4
0x08AC	0x6E1F      	MOVWF       _rnum 
0x08AE	0x0E00      	MOVLW       0
0x08B0	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,177 :: 		}
0x08B2	0xD090      	BRA         L_main84
L_main83:
;MyProject.c,178 :: 		else if (2550<counter && counter <=3050)
0x08B4	0x5026      	MOVF        _counter+3, 0 
0x08B6	0x0800      	SUBLW       0
0x08B8	0xE108      	BNZ         L__main160
0x08BA	0x5025      	MOVF        _counter+2, 0 
0x08BC	0x0800      	SUBLW       0
0x08BE	0xE105      	BNZ         L__main160
0x08C0	0x5024      	MOVF        _counter+1, 0 
0x08C2	0x0809      	SUBLW       9
0x08C4	0xE102      	BNZ         L__main160
0x08C6	0x5023      	MOVF        _counter, 0 
0x08C8	0x08F6      	SUBLW       246
L__main160:
0x08CA	0xE211      	BC          L_main87
0x08CC	0x5026      	MOVF        _counter+3, 0 
0x08CE	0x0800      	SUBLW       0
0x08D0	0xE108      	BNZ         L__main161
0x08D2	0x5025      	MOVF        _counter+2, 0 
0x08D4	0x0800      	SUBLW       0
0x08D6	0xE105      	BNZ         L__main161
0x08D8	0x5024      	MOVF        _counter+1, 0 
0x08DA	0x080B      	SUBLW       11
0x08DC	0xE102      	BNZ         L__main161
0x08DE	0x5023      	MOVF        _counter, 0 
0x08E0	0x08EA      	SUBLW       234
L__main161:
0x08E2	0xE305      	BNC         L_main87
L__main125:
;MyProject.c,180 :: 		rnum=5;
0x08E4	0x0E05      	MOVLW       5
0x08E6	0x6E1F      	MOVWF       _rnum 
0x08E8	0x0E00      	MOVLW       0
0x08EA	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,181 :: 		}
0x08EC	0xD073      	BRA         L_main88
L_main87:
;MyProject.c,182 :: 		else if (3050<counter && counter <=3550)
0x08EE	0x5026      	MOVF        _counter+3, 0 
0x08F0	0x0800      	SUBLW       0
0x08F2	0xE108      	BNZ         L__main162
0x08F4	0x5025      	MOVF        _counter+2, 0 
0x08F6	0x0800      	SUBLW       0
0x08F8	0xE105      	BNZ         L__main162
0x08FA	0x5024      	MOVF        _counter+1, 0 
0x08FC	0x080B      	SUBLW       11
0x08FE	0xE102      	BNZ         L__main162
0x0900	0x5023      	MOVF        _counter, 0 
0x0902	0x08EA      	SUBLW       234
L__main162:
0x0904	0xE211      	BC          L_main91
0x0906	0x5026      	MOVF        _counter+3, 0 
0x0908	0x0800      	SUBLW       0
0x090A	0xE108      	BNZ         L__main163
0x090C	0x5025      	MOVF        _counter+2, 0 
0x090E	0x0800      	SUBLW       0
0x0910	0xE105      	BNZ         L__main163
0x0912	0x5024      	MOVF        _counter+1, 0 
0x0914	0x080D      	SUBLW       13
0x0916	0xE102      	BNZ         L__main163
0x0918	0x5023      	MOVF        _counter, 0 
0x091A	0x08DE      	SUBLW       222
L__main163:
0x091C	0xE305      	BNC         L_main91
L__main124:
;MyProject.c,184 :: 		rnum=6;
0x091E	0x0E06      	MOVLW       6
0x0920	0x6E1F      	MOVWF       _rnum 
0x0922	0x0E00      	MOVLW       0
0x0924	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,185 :: 		}
0x0926	0xD056      	BRA         L_main92
L_main91:
;MyProject.c,186 :: 		else if (3550<counter && counter <=4050)
0x0928	0x5026      	MOVF        _counter+3, 0 
0x092A	0x0800      	SUBLW       0
0x092C	0xE108      	BNZ         L__main164
0x092E	0x5025      	MOVF        _counter+2, 0 
0x0930	0x0800      	SUBLW       0
0x0932	0xE105      	BNZ         L__main164
0x0934	0x5024      	MOVF        _counter+1, 0 
0x0936	0x080D      	SUBLW       13
0x0938	0xE102      	BNZ         L__main164
0x093A	0x5023      	MOVF        _counter, 0 
0x093C	0x08DE      	SUBLW       222
L__main164:
0x093E	0xE211      	BC          L_main95
0x0940	0x5026      	MOVF        _counter+3, 0 
0x0942	0x0800      	SUBLW       0
0x0944	0xE108      	BNZ         L__main165
0x0946	0x5025      	MOVF        _counter+2, 0 
0x0948	0x0800      	SUBLW       0
0x094A	0xE105      	BNZ         L__main165
0x094C	0x5024      	MOVF        _counter+1, 0 
0x094E	0x080F      	SUBLW       15
0x0950	0xE102      	BNZ         L__main165
0x0952	0x5023      	MOVF        _counter, 0 
0x0954	0x08D2      	SUBLW       210
L__main165:
0x0956	0xE305      	BNC         L_main95
L__main123:
;MyProject.c,188 :: 		rnum=7;
0x0958	0x0E07      	MOVLW       7
0x095A	0x6E1F      	MOVWF       _rnum 
0x095C	0x0E00      	MOVLW       0
0x095E	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,189 :: 		}
0x0960	0xD039      	BRA         L_main96
L_main95:
;MyProject.c,190 :: 		else if (4050<counter && counter <=4550)
0x0962	0x5026      	MOVF        _counter+3, 0 
0x0964	0x0800      	SUBLW       0
0x0966	0xE108      	BNZ         L__main166
0x0968	0x5025      	MOVF        _counter+2, 0 
0x096A	0x0800      	SUBLW       0
0x096C	0xE105      	BNZ         L__main166
0x096E	0x5024      	MOVF        _counter+1, 0 
0x0970	0x080F      	SUBLW       15
0x0972	0xE102      	BNZ         L__main166
0x0974	0x5023      	MOVF        _counter, 0 
0x0976	0x08D2      	SUBLW       210
L__main166:
0x0978	0xE211      	BC          L_main99
0x097A	0x5026      	MOVF        _counter+3, 0 
0x097C	0x0800      	SUBLW       0
0x097E	0xE108      	BNZ         L__main167
0x0980	0x5025      	MOVF        _counter+2, 0 
0x0982	0x0800      	SUBLW       0
0x0984	0xE105      	BNZ         L__main167
0x0986	0x5024      	MOVF        _counter+1, 0 
0x0988	0x0811      	SUBLW       17
0x098A	0xE102      	BNZ         L__main167
0x098C	0x5023      	MOVF        _counter, 0 
0x098E	0x08C6      	SUBLW       198
L__main167:
0x0990	0xE305      	BNC         L_main99
L__main122:
;MyProject.c,192 :: 		rnum=8;
0x0992	0x0E08      	MOVLW       8
0x0994	0x6E1F      	MOVWF       _rnum 
0x0996	0x0E00      	MOVLW       0
0x0998	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,193 :: 		}
0x099A	0xD01C      	BRA         L_main100
L_main99:
;MyProject.c,194 :: 		else if (4550<counter && counter <=5050)
0x099C	0x5026      	MOVF        _counter+3, 0 
0x099E	0x0800      	SUBLW       0
0x09A0	0xE108      	BNZ         L__main168
0x09A2	0x5025      	MOVF        _counter+2, 0 
0x09A4	0x0800      	SUBLW       0
0x09A6	0xE105      	BNZ         L__main168
0x09A8	0x5024      	MOVF        _counter+1, 0 
0x09AA	0x0811      	SUBLW       17
0x09AC	0xE102      	BNZ         L__main168
0x09AE	0x5023      	MOVF        _counter, 0 
0x09B0	0x08C6      	SUBLW       198
L__main168:
0x09B2	0xE210      	BC          L_main103
0x09B4	0x5026      	MOVF        _counter+3, 0 
0x09B6	0x0800      	SUBLW       0
0x09B8	0xE108      	BNZ         L__main169
0x09BA	0x5025      	MOVF        _counter+2, 0 
0x09BC	0x0800      	SUBLW       0
0x09BE	0xE105      	BNZ         L__main169
0x09C0	0x5024      	MOVF        _counter+1, 0 
0x09C2	0x0813      	SUBLW       19
0x09C4	0xE102      	BNZ         L__main169
0x09C6	0x5023      	MOVF        _counter, 0 
0x09C8	0x08BA      	SUBLW       186
L__main169:
0x09CA	0xE304      	BNC         L_main103
L__main121:
;MyProject.c,196 :: 		rnum=9;
0x09CC	0x0E09      	MOVLW       9
0x09CE	0x6E1F      	MOVWF       _rnum 
0x09D0	0x0E00      	MOVLW       0
0x09D2	0x6E20      	MOVWF       _rnum+1 
;MyProject.c,197 :: 		}
L_main103:
L_main100:
L_main96:
L_main92:
L_main88:
L_main84:
L_main80:
L_main76:
L_main72:
L_main68:
;MyProject.c,199 :: 		k++;
0x09D4	0x4A15      	INFSNZ      _k, 1 
0x09D6	0x2A16      	INCF        _k+1, 1 
;MyProject.c,201 :: 		if (k==1){
0x09D8	0x0E00      	MOVLW       0
0x09DA	0x1816      	XORWF       _k+1, 0 
0x09DC	0xE102      	BNZ         L__main170
0x09DE	0x0E01      	MOVLW       1
0x09E0	0x1815      	XORWF       _k, 0 
L__main170:
0x09E2	0xE105      	BNZ         L_main104
;MyProject.c,202 :: 		numb=rnum;
0x09E4	0xF021C01F  	MOVFF       _rnum, _numb
0x09E8	0xF022C020  	MOVFF       _rnum+1, _numb+1
;MyProject.c,203 :: 		}
0x09EC	0xD036      	BRA         L_main105
L_main104:
;MyProject.c,204 :: 		else if (k==2){
0x09EE	0x0E00      	MOVLW       0
0x09F0	0x1816      	XORWF       _k+1, 0 
0x09F2	0xE102      	BNZ         L__main171
0x09F4	0x0E02      	MOVLW       2
0x09F6	0x1815      	XORWF       _k, 0 
L__main171:
0x09F8	0xE10F      	BNZ         L_main106
;MyProject.c,205 :: 		numb=rnum*10+numb;
0x09FA	0xF000C01F  	MOVFF       _rnum, R0
0x09FE	0xF001C020  	MOVFF       _rnum+1, R1
0x0A02	0x0E0A      	MOVLW       10
0x0A04	0x6E04      	MOVWF       R4 
0x0A06	0x0E00      	MOVLW       0
0x0A08	0x6E05      	MOVWF       R5 
0x0A0A	0xF000EC0E  	CALL        _Mul_16x16_U, 0
0x0A0E	0x5000      	MOVF        R0, 0 
0x0A10	0x2621      	ADDWF       _numb, 1 
0x0A12	0x5001      	MOVF        R1, 0 
0x0A14	0x2222      	ADDWFC      _numb+1, 1 
;MyProject.c,206 :: 		}
0x0A16	0xD021      	BRA         L_main107
L_main106:
;MyProject.c,207 :: 		else if (k==3){
0x0A18	0x0E00      	MOVLW       0
0x0A1A	0x1816      	XORWF       _k+1, 0 
0x0A1C	0xE102      	BNZ         L__main172
0x0A1E	0x0E03      	MOVLW       3
0x0A20	0x1815      	XORWF       _k, 0 
L__main172:
0x0A22	0xE11B      	BNZ         L_main108
;MyProject.c,208 :: 		numb=rnum*100+numb;
0x0A24	0xF000C01F  	MOVFF       _rnum, R0
0x0A28	0xF001C020  	MOVFF       _rnum+1, R1
0x0A2C	0x0E64      	MOVLW       100
0x0A2E	0x6E04      	MOVWF       R4 
0x0A30	0x0E00      	MOVLW       0
0x0A32	0x6E05      	MOVWF       R5 
0x0A34	0xF000EC0E  	CALL        _Mul_16x16_U, 0
0x0A38	0x5021      	MOVF        _numb, 0 
0x0A3A	0x2600      	ADDWF       R0, 1 
0x0A3C	0x5022      	MOVF        _numb+1, 0 
0x0A3E	0x2201      	ADDWFC      R1, 1 
0x0A40	0xF021C000  	MOVFF       R0, _numb
0x0A44	0xF022C001  	MOVFF       R1, _numb+1
;MyProject.c,209 :: 		UART1_Write(numb);
0x0A48	0xF032C000  	MOVFF       R0, FARG_UART1_Write_data_
0x0A4C	0xDDE8      	RCALL       _UART1_Write
;MyProject.c,210 :: 		k=0;
0x0A4E	0x6A15      	CLRF        _k 
0x0A50	0x6A16      	CLRF        _k+1 
;MyProject.c,211 :: 		numb=0;
0x0A52	0x6A21      	CLRF        _numb 
0x0A54	0x6A22      	CLRF        _numb+1 
;MyProject.c,212 :: 		renum=0;
0x0A56	0x6A28      	CLRF        _renum 
0x0A58	0x6A29      	CLRF        _renum+1 
;MyProject.c,213 :: 		}
L_main108:
L_main107:
L_main105:
;MyProject.c,214 :: 		}
L_main62:
;MyProject.c,215 :: 		}
0x0A5A	0xD66C      	BRA         L_main58
L_main59:
;MyProject.c,216 :: 		}
0x0A5C	0xD633      	BRA         L_main48
;MyProject.c,217 :: 		}
L_main47:
L_main46:
;MyProject.c,218 :: 		}
0x0A5E	0xD61C      	BRA         L_main42
;MyProject.c,219 :: 		}
L_main41:
;MyProject.c,226 :: 		else if(uart_rd=='S'){uart_rd=0;       ////**********SENDING MODE********////
0x0A60	0x5027      	MOVF        _uart_rd, 0 
0x0A62	0x0A53      	XORLW       83
0x0A64	0xE125      	BNZ         L_main110
0x0A66	0x6A27      	CLRF        _uart_rd 
;MyProject.c,228 :: 		setupForS();
0x0A68	0xDD89      	RCALL       _setupForS
;MyProject.c,230 :: 		while (1){
L_main111:
;MyProject.c,231 :: 		if (UART1_Data_Ready()){
0x0A6A	0xDD94      	RCALL       _UART1_Data_Ready
0x0A6C	0x5200      	MOVF        R0, 1 
0x0A6E	0xE003      	BZ          L_main113
;MyProject.c,232 :: 		uart_rd=UART1_Read();}
0x0A70	0xDDDD      	RCALL       _UART1_Read
0x0A72	0xF027C000  	MOVFF       R0, _uart_rd
L_main113:
;MyProject.c,234 :: 		if (uart_rd=='M'){
0x0A76	0x5027      	MOVF        _uart_rd, 0 
0x0A78	0x0A4D      	XORLW       77
0x0A7A	0xE108      	BNZ         L_main114
;MyProject.c,235 :: 		UART1_Write('S');
0x0A7C	0x0E53      	MOVLW       83
0x0A7E	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x0A80	0xDDCE      	RCALL       _UART1_Write
;MyProject.c,236 :: 		UART1_Write(10);
0x0A82	0x0E0A      	MOVLW       10
0x0A84	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x0A86	0xDDCB      	RCALL       _UART1_Write
;MyProject.c,237 :: 		uart_rd=0;
0x0A88	0x6A27      	CLRF        _uart_rd 
;MyProject.c,238 :: 		}
0x0A8A	0xD011      	BRA         L_main115
L_main114:
;MyProject.c,239 :: 		else if (uart_rd=='S'){uart_rd=0;
0x0A8C	0x5027      	MOVF        _uart_rd, 0 
0x0A8E	0x0A53      	XORLW       83
0x0A90	0xE10E      	BNZ         L_main116
0x0A92	0x6A27      	CLRF        _uart_rd 
;MyProject.c,241 :: 		while (1){
L_main117:
;MyProject.c,242 :: 		if (UART1_Data_Ready()){
0x0A94	0xDD7F      	RCALL       _UART1_Data_Ready
0x0A96	0x5200      	MOVF        R0, 1 
0x0A98	0xE009      	BZ          L_main119
;MyProject.c,243 :: 		uart_rd=UART1_Read();
0x0A9A	0xDDC8      	RCALL       _UART1_Read
0x0A9C	0xF027C000  	MOVFF       R0, _uart_rd
;MyProject.c,244 :: 		sentData(uart_rd);
0x0AA0	0xF032C000  	MOVFF       R0, FARG_sentData_number
0x0AA4	0x0E00      	MOVLW       0
0x0AA6	0x6E33      	MOVWF       FARG_sentData_number+1 
0x0AA8	0xF000EC95  	CALL        _sentData, 0
;MyProject.c,245 :: 		}
L_main119:
;MyProject.c,246 :: 		}
0x0AAC	0xD7F3      	BRA         L_main117
;MyProject.c,247 :: 		}
L_main116:
L_main115:
;MyProject.c,248 :: 		}
0x0AAE	0xD7DD      	BRA         L_main111
;MyProject.c,249 :: 		}
L_main110:
L_main40:
;MyProject.c,250 :: 		}
0x0AB0	0xD5DC      	BRA         L_main36
;MyProject.c,251 :: 		}
L_end_main:
0x0AB2	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [20]    _interrupt
0x001C      [80]    _Mul_16x16_U
0x006C     [108]    _PWM1_Set_Duty
0x00D8       [8]    _PWM1_Init
0x00E0      [10]    _PWM1_Start
0x00EA      [10]    _PWM1_Stop
0x00F4      [54]    _Div_16x16_U
0x012A    [1106]    _sentData
0x057C      [24]    _setupForS
0x0594      [10]    _UART1_Data_Ready
0x059E      [86]    _UART1_Init
0x05F4      [16]    ___CC2DW
0x0604      [26]    _setupForR
0x061E      [14]    _UART1_Write
0x062C      [18]    _UART1_Read
0x063E    [1142]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    __Lib_USB_genHID_memset_usb_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    __Lib_USB_genHID_memset_usb_int_pp_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_Int_handle_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    __Lib_USB_genHID_USB_Configure_Endpoint_handle_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _k
0x0017       [4]    _UART_Wr_Ptr
0x001B       [4]    _UART_Rd_Ptr
0x001F       [2]    _rnum
0x0021       [2]    _numb
0x0023       [4]    _counter
0x0027       [1]    _uart_rd
0x0028       [2]    _renum
0x002A       [4]    _UART_Rdy_Ptr
0x002E       [4]    _UART_Tx_Idle_Ptr
0x0032       [1]    FARG_UART1_Write_data_
0x0032       [2]    FARG_sentData_number
0x0034       [2]    sentData_pnum_L0
0x0036       [2]    sentData_i_L0
0x0038      [10]    sentData_digit_L0
0x0042       [1]    FARG_PWM1_Set_Duty_new_duty
0x0042       [4]    FARG_PWM1_Init_PWM_Freq
0x0F80       [0]    RA1_bit
0x0F80       [1]    PORTA
0x0F92       [1]    TRISA
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_sentData0
  L_sentData1
  L_sentData2
  L_sentData3
  L_sentData4
  L_sentData5
  L_sentData6
  L_sentData7
  L_sentData8
  L_sentData9
  L_sentData10
  L_sentData11
  L_sentData12
  L_sentData13
  L_sentData14
  L_sentData15
  L_sentData16
  L_sentData17
  L_sentData18
  L_sentData19
  L_sentData20
  L_sentData21
  L_sentData22
  L_sentData23
  L_sentData24
  L_sentData25
  L_sentData26
  L_sentData27
  L_sentData28
  L_sentData29
  L_sentData30
  L_sentData31
  L_sentData32
  L_sentData33
  L_sentData34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L_main113
  L_main114
  L_main115
  L_main116
  L_main117
  L_main118
  L_main119
  L_interrupt120
  L__main121
  L__main122
  L__main123
  L__main124
  L__main125
  L__main126
  L__main127
  L__main128
  L__main129
  L__main130
  L__main131
  L_end_setupForS
  _setupForS
  L_end_setupForR
  _setupForR
  L_end_sentData
  _sentData
  L__sentData135
  L__sentData136
  L__sentData137
  L__sentData138
  L__sentData139
  L__sentData140
  L__sentData141
  L__sentData142
  L__sentData143
  L__sentData144
  L__sentData145
  L_end_main
  _main
  L__main147
  L__main148
  L__main149
  L__main150
  L__main151
  L__main152
  L__main153
  L__main154
  L__main155
  L__main156
  L__main157
  L__main158
  L__main159
  L__main160
  L__main161
  L__main162
  L__main163
  L__main164
  L__main165
  L__main166
  L__main167
  L__main168
  L__main169
  L__main170
  L__main171
  L__main172
  L_end_interrupt
  _interrupt
  L__interrupt174
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  L__PWM2_Set_Duty4
  L__PWM2_Set_Duty5
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_sentData0
  L_sentData1
  L_sentData2
  L_sentData3
  L_sentData4
  L_sentData5
  L_sentData6
  L_sentData7
  L_sentData8
  L_sentData9
  L_sentData10
  L_sentData11
  L_sentData12
  L_sentData13
  L_sentData14
  L_sentData15
  L_sentData16
  L_sentData17
  L_sentData18
  L_sentData19
  L_sentData20
  L_sentData21
  L_sentData22
  L_sentData23
  L_sentData24
  L_sentData25
  L_sentData26
  L_sentData27
  L_sentData28
  L_sentData29
  L_sentData30
  L_sentData31
  L_sentData32
  L_sentData33
  L_sentData34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L_main113
  L_main114
  L_main115
  L_main116
  L_main117
  L_main118
  L_main119
  L_interrupt120
  L__main121
  L__main122
  L__main123
  L__main124
  L__main125
  L__main126
  L__main127
  L__main128
  L__main129
  L__main130
  L__main131
  L_end_setupForS
  _setupForS
  L_end_setupForR
  _setupForR
  L_end_sentData
  _sentData
  L__sentData135
  L__sentData136
  L__sentData137
  L__sentData138
  L__sentData139
  L__sentData140
  L__sentData141
  L__sentData142
  L__sentData143
  L__sentData144
  L__sentData145
  L_end_main
  _main
  L__main147
  L__main148
  L__main149
  L__main150
  L__main151
  L__main152
  L__main153
  L__main154
  L__main155
  L__main156
  L__main157
  L__main158
  L__main159
  L__main160
  L__main161
  L__main162
  L__main163
  L__main164
  L__main165
  L__main166
  L__main167
  L__main168
  L__main169
  L__main170
  L__main171
  L__main172
  L_end_interrupt
  _interrupt
  L__interrupt174
